{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nexport default function Home({\n  postsPagination\n}) {\n  console.log(postsPagination);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.mainContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query([Prismic.Predicates.at('document.type', 'posts')], {\n    fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n    pageSize: 100\n  });\n  const results = response.results.map(post => {\n    return {\n      slug: post.uid,\n      updatedAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  });\n  return {\n    props: {\n      results\n    }\n  };\n};","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx"],"names":["Prismic","getPrismicClient","styles","Home","postsPagination","console","log","mainContent","getStaticProps","prismic","response","query","Predicates","at","fetch","pageSize","results","map","post","slug","uid","updatedAt","Date","last_publication_date","toLocaleDateString","day","month","year","data","title","subtitle","author","props"],"mappings":";;AACA,OAAOA,OAAP,MAAoB,mBAApB;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAqBA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA2D;AACxEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA,sBACE;AAAM,IAAA,SAAS,EAAEF,MAAM,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAMC,OAAO,GAAGR,gBAAgB,EAAhC;AACA,QAAMS,QAAQ,GAAG,MAAMD,OAAO,CAACE,KAAR,CACrB,CAACX,OAAO,CAACY,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,OAAvC,CAAD,CADqB,EAErB;AACEC,IAAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,cAAlC,CADT;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAFqB,CAAvB;AAQA,QAAMC,OAAO,GAAGN,QAAQ,CAACM,OAAT,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAC3C,WAAO;AACLC,MAAAA,IAAI,EAAED,IAAI,CAACE,GADN;AAELC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASJ,IAAI,CAACK,qBAAd,EAAqCC,kBAArC,CACT,OADS,EAET;AACEC,QAAAA,GAAG,EAAE,SADP;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,IAAI,EAAE;AAHR,OAFS,CAFN;AAULC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEX,IAAI,CAACU,IAAL,CAAUC,KADb;AAEJC,QAAAA,QAAQ,EAAEZ,IAAI,CAACU,IAAL,CAAUE,QAFhB;AAGJC,QAAAA,MAAM,EAAEb,IAAI,CAACU,IAAL,CAAUG;AAHd;AAVD,KAAP;AAgBD,GAjBe,CAAhB;AAmBA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLhB,MAAAA;AADK;AADF,GAAP;AAKD,CAlCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport Prismic from '@prismicio/client';\n\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport { getPrismicClient } from '../services/prismic';\n\nimport styles from './home.module.scss';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({ postsPagination }: HomeProps): JSX.Element {\n  console.log(postsPagination);\n  return (\n    <main className={styles.mainContent}>\n      {/* {results.map(post => (\n        <div key={post.uid} className={styles.posts}>\n          <h1>{post.data.title}</h1>\n          <p>{post.data.subtitle}</p>\n          <div className={styles.infos}>\n            <div>\n              <FiCalendar size={20} />\n              <p>{post.first_publication_date}</p>\n            </div>\n            <div>\n              <FiUser size={20} />\n              <p>{post.data.author}</p>\n            </div>\n          </div>\n        </div>\n      ))} */}\n    </main>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query(\n    [Prismic.Predicates.at('document.type', 'posts')],\n    {\n      fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n      pageSize: 100,\n    }\n  );\n\n  const results = response.results.map(post => {\n    return {\n      slug: post.uid,\n      updatedAt: new Date(post.last_publication_date).toLocaleDateString(\n        'pt-BR',\n        {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric',\n        }\n      ),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author,\n      },\n    };\n  });\n\n  return {\n    props: {\n      results,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}