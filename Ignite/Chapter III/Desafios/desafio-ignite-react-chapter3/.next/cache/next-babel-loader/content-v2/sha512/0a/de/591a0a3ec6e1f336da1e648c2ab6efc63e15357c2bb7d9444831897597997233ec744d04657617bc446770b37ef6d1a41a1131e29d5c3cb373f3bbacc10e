{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/post/[slug].tsx\";\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable react/no-danger */\nimport { RichText } from 'prismic-dom';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { FiCalendar, FiUser, FiClock } from 'react-icons/fi';\nimport Prismic from '@prismicio/client';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { getPrismicClient } from '../../services/prismic';\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\nexport default function Post({\n  post\n}) {\n  const totalWords = post.data.content.reduce((total, contentItem) => {\n    total += contentItem.heading.split(' ').length;\n    const words = contentItem.body.map(item => item.text.split(' ').length);\n    words.map(word => total += word);\n    return total;\n  }, 0);\n  const readTime = Math.ceil(totalWords / 200);\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  const formatedDate = format(new Date(post.first_publication_date), {\n    locale: ptBR\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: `${post.data.title} | spacetraveling`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.data.banner.url,\n      alt: \"banner\",\n      className: styles.banner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: commonStyles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: commonStyles.posts,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: commonStyles.infos,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.first_publication_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.data.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiClock, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${readTime} minutos`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: styles.content,\n          children: post.data.content.map(content => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: styles.headerContent,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: content.heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: RichText.asHtml(content.body)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, content.heading, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  const posts = await prismic.query([Prismic.Predicates.at('document.type', 'posts')]);\n  const paths = posts.results.map(post => {\n    return {\n      params: {\n        slug: post.uid\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: true\n  };\n};\nexport const getStaticProps = async context => {\n  const prismic = getPrismicClient();\n  const {\n    slug\n  } = context.params;\n  const response = await prismic.getByUID('posts', String(slug), {});\n  const post = {\n    uid: response.uid,\n    first_publication_date: response.first_publication_date,\n    data: {\n      title: response.data.title,\n      subtitle: response.data.subtitle,\n      author: response.data.author,\n      banner: {\n        url: response.data.banner.url\n      },\n      content: response.data.content.map(content => {\n        return {\n          heading: content.heading,\n          body: [...content.body]\n        };\n      })\n    }\n  };\n  return {\n    props: {\n      post\n    }\n  };\n};","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/post/[slug].tsx"],"names":["RichText","format","ptBR","FiCalendar","FiUser","FiClock","Prismic","useRouter","Head","getPrismicClient","commonStyles","styles","Post","post","totalWords","data","content","reduce","total","contentItem","heading","split","length","words","body","map","item","text","word","readTime","Math","ceil","router","isFallback","formatedDate","Date","first_publication_date","locale","title","banner","url","container","posts","infos","author","headerContent","__html","asHtml","getStaticPaths","prismic","query","Predicates","at","paths","results","params","slug","uid","fallback","getStaticProps","context","response","getByUID","String","subtitle","props"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/no-danger */\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { RichText } from 'prismic-dom';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\nimport { FiCalendar, FiUser, FiClock } from 'react-icons/fi';\nimport Prismic from '@prismicio/client';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { getPrismicClient } from '../../services/prismic';\n\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\n\ninterface Post {\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({ post }: PostProps): JSX.Element {\n  const totalWords = post.data.content.reduce((total, contentItem) => {\n    total += contentItem.heading.split(' ').length;\n\n    const words = contentItem.body.map(item => item.text.split(' ').length);\n    words.map(word => (total += word));\n    return total;\n  }, 0);\n  const readTime = Math.ceil(totalWords / 200);\n\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return <h1>Carregando...</h1>;\n  }\n\n  const formatedDate = format(new Date(post.first_publication_date), {\n    locale: ptBR,\n  });\n\n  return (\n    <>\n      <Head>\n        <title>{`${post.data.title} | spacetraveling`}</title>\n      </Head>\n\n      <img src={post.data.banner.url} alt=\"banner\" className={styles.banner} />\n      <div className={styles.content}>\n        <div className={commonStyles.container}>\n          <header className={commonStyles.posts}>\n            <h1>{post.data.title}</h1>\n            <div className={commonStyles.infos}>\n              <div>\n                <FiCalendar size={20} />\n                <p>{post.first_publication_date}</p>\n              </div>\n              <div>\n                <FiUser size={20} />\n                <p>{post.data.author}</p>\n              </div>\n              <div>\n                <FiClock size={20} />\n                <p>{`${readTime} minutos`}</p>\n              </div>\n            </div>\n          </header>\n\n          <main className={styles.content}>\n            {post.data.content.map(content => (\n              <article key={content.heading} className={styles.headerContent}>\n                <h2>{content.heading}</h2>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: RichText.asHtml(content.body),\n                  }}\n                />\n              </article>\n            ))}\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  const posts = await prismic.query([\n    Prismic.Predicates.at('document.type', 'posts'),\n  ]);\n\n  const paths = posts.results.map(post => {\n    return {\n      params: {\n        slug: post.uid,\n      },\n    };\n  });\n\n  return {\n    paths,\n    fallback: true,\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async context => {\n  const prismic = getPrismicClient();\n  const { slug } = context.params;\n  const response = await prismic.getByUID('posts', String(slug), {});\n\n  const post = {\n    uid: response.uid,\n    first_publication_date: response.first_publication_date,\n    data: {\n      title: response.data.title,\n      subtitle: response.data.subtitle,\n      author: response.data.author,\n      banner: {\n        url: response.data.banner.url,\n      },\n      content: response.data.content.map(content => {\n        return {\n          heading: content.heading,\n          body: [...content.body],\n        };\n      }),\n    },\n  };\n\n  return {\n    props: {\n      post,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}