{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nimport commonStyles from '../styles/common.module.scss';\nexport default function Home({\n  results,\n  next_page\n}) {\n  const {\n    0: pages,\n    1: setPages\n  } = useState([results]);\n  const teste = pages.map(post => post);\n  console.log(teste); // function handleLoadMore() {\n  //   setPages(pages + 2);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: commonStyles.container,\n    children: [results.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      href: `/post/${post.uid}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: styles.link,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.posts,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.data.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infos,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.first_publication_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.data.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, post.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), next_page !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.loadMore,\n      children: \"Carregar mais posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query([Prismic.Predicates.at('document.type', 'posts')], {\n    fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n    pageSize: 2\n  });\n  const {\n    next_page\n  } = response;\n  const results = response.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: new Date(post.first_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  });\n  return {\n    props: {\n      next_page,\n      results\n    }\n  };\n};","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx"],"names":["Prismic","FiCalendar","FiUser","Link","useState","getPrismicClient","styles","commonStyles","Home","results","next_page","pages","setPages","teste","map","post","console","log","container","uid","link","posts","data","title","subtitle","infos","first_publication_date","author","loadMore","getStaticProps","prismic","response","query","Predicates","at","fetch","pageSize","Date","toLocaleDateString","day","month","year","props"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Prismic from '@prismicio/client';\n\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { getPrismicClient } from '../services/prismic';\n\nimport styles from './home.module.scss';\nimport commonStyles from '../styles/common.module.scss';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({\n  results,\n  next_page,\n}: PostPagination): JSX.Element {\n  const [pages, setPages] = useState([results]);\n\n  const teste = pages.map(post => post);\n  console.log(teste);\n\n  // function handleLoadMore() {\n  //   setPages(pages + 2);\n  // }\n\n  return (\n    <main className={commonStyles.container}>\n      {results.map(post => (\n        <Link href={`/post/${post.uid}`}>\n          <a className={styles.link} key={post.uid}>\n            <div className={styles.posts}>\n              <h1>{post.data.title}</h1>\n              <p>{post.data.subtitle}</p>\n              <div className={styles.infos}>\n                <div>\n                  <FiCalendar size={20} />\n                  <p>{post.first_publication_date}</p>\n                </div>\n                <div>\n                  <FiUser size={20} />\n                  <p>{post.data.author}</p>\n                </div>\n              </div>\n            </div>\n          </a>\n        </Link>\n      ))}\n      {next_page !== null && (\n        <p className={styles.loadMore}>Carregar mais posts</p>\n      )}\n    </main>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query(\n    [Prismic.Predicates.at('document.type', 'posts')],\n    {\n      fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n      pageSize: 2,\n    }\n  );\n\n  const { next_page } = response;\n\n  const results = response.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: new Date(\n        post.first_publication_date\n      ).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric',\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author,\n      },\n    };\n  });\n\n  return {\n    props: {\n      next_page,\n      results,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}