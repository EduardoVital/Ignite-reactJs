{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx\";\nimport commonStyles from '../styles/common.module.scss';\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  var postsPagination = _ref.postsPagination;\n  console.log(postsPagination); // const [pages, setPages] = useState(results_size);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: commonStyles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx"],"names":["commonStyles","Home","postsPagination","console","log","container"],"mappings":";;AASA,OAAOA,YAAP,MAAyB,8BAAzB;;AAqBA,eAAe,SAASC,IAAT,OAA2D;AAAA,MAA3CC,eAA2C,QAA3CA,eAA2C;AACxEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ,EADwE,CAExE;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEF,YAAY,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;KA/BuBJ,I","sourcesContent":["import { GetStaticProps } from 'next';\nimport Prismic from '@prismicio/client';\n\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { getPrismicClient } from '../services/prismic';\n\nimport styles from './home.module.scss';\nimport commonStyles from '../styles/common.module.scss';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({ postsPagination }: HomeProps): JSX.Element {\n  console.log(postsPagination);\n  // const [pages, setPages] = useState(results_size);\n\n  return (\n    <main className={commonStyles.container}>\n      {/* {results.map(post => (\n        <Link href={`/post/${post.uid}`}>\n          <a className={styles.link} key={post.uid}>\n            <div className={styles.posts}>\n              <h1>{post.data.title}</h1>\n              <p>{post.data.subtitle}</p>\n              <div className={styles.infos}>\n                <div>\n                  <FiCalendar size={20} />\n                  <p>{post.first_publication_date}</p>\n                </div>\n                <div>\n                  <FiUser size={20} />\n                  <p>{post.data.author}</p>\n                </div>\n              </div>\n            </div>\n          </a>\n        </Link>\n      ))} */}\n      {/* {next_page !== null && (\n        <p className={styles.loadMore}>Carregar mais posts</p>\n      )} */}\n    </main>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type', 'posts')],\n    {\n      fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n      pageSize: 2,\n    }\n  );\n\n  // const { next_page } = postResponse;\n\n  const posts = postResponse.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: new Date(\n        post.first_publication_date\n      ).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric',\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author,\n      },\n    };\n  });\n\n  const postPagination = {\n    next_page: postResponse.next_page,\n    results: posts,\n  };\n\n  return {\n    props: {\n      postPagination,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}