{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport Head from 'next/head';\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nimport commonStyles from '../styles/common.module.scss';\nexport default function Home({\n  postsPagination\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsPagination.results);\n  const {\n    0: nextPage,\n    1: setNextPage\n  } = useState(postsPagination.next_page);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n\n  async function handleNextPage() {\n    if (currentPage !== 1 && nextPage === null) {\n      return;\n    }\n\n    const postResults = await fetch(`${nextPage}`).then(response => response.json());\n    setNextPage(postResults.next_page);\n    setCurrentPage(postResults.page);\n    const newPosts = postResults.results.map(post => {\n      return {\n        uid: post.uid,\n        first_publication_date: format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n          locale: ptBR\n        }),\n        data: {\n          title: post.data.title,\n          subtitle: post.data.subtitle,\n          author: post.data.author\n        }\n      };\n    });\n    setPosts([...posts, ...newPosts]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home | spacetraveling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: commonStyles.container,\n      children: [posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n        href: `/post/${post.uid}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: styles.link,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: commonStyles.posts,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: post.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.data.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: commonStyles.infos,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.first_publication_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.data.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, post.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)), nextPage && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.loadMore,\n        onClick: handleNextPage,\n        children: \"Carregar mais posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postResponse = await prismic.query([Prismic.Predicates.at('document.type', 'posts')], {\n    pageSize: 2\n  });\n  const posts = postResponse.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n        locale: ptBR\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  });\n  const postsPagination = {\n    next_page: postResponse.next_page,\n    results: posts\n  };\n  return {\n    props: {\n      postsPagination\n    }\n  };\n};","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx"],"names":["Prismic","FiCalendar","FiUser","Link","useState","format","ptBR","Head","getPrismicClient","styles","commonStyles","Home","postsPagination","posts","setPosts","results","nextPage","setNextPage","next_page","currentPage","setCurrentPage","handleNextPage","postResults","fetch","then","response","json","page","newPosts","map","post","uid","first_publication_date","Date","locale","data","title","subtitle","author","container","link","infos","loadMore","getStaticProps","prismic","postResponse","query","Predicates","at","pageSize","props"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Prismic from '@prismicio/client';\n\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport Head from 'next/head';\nimport { getPrismicClient } from '../services/prismic';\n\nimport styles from './home.module.scss';\nimport commonStyles from '../styles/common.module.scss';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({ postsPagination }: HomeProps): JSX.Element {\n  const [posts, setPosts] = useState<Post[]>(postsPagination.results);\n  const [nextPage, setNextPage] = useState(postsPagination.next_page);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  async function handleNextPage(): Promise<void> {\n    if (currentPage !== 1 && nextPage === null) {\n      return;\n    }\n\n    const postResults = await fetch(`${nextPage}`).then(response =>\n      response.json()\n    );\n\n    setNextPage(postResults.next_page);\n    setCurrentPage(postResults.page);\n\n    const newPosts = postResults.results.map(post => {\n      return {\n        uid: post.uid,\n        first_publication_date: format(\n          new Date(post.first_publication_date),\n          'dd MMM yyyy',\n          {\n            locale: ptBR,\n          }\n        ),\n        data: {\n          title: post.data.title,\n          subtitle: post.data.subtitle,\n          author: post.data.author,\n        },\n      };\n    });\n\n    setPosts([...posts, ...newPosts]);\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Home | spacetraveling</title>\n      </Head>\n\n      <main className={commonStyles.container}>\n        {posts.map(post => (\n          <Link href={`/post/${post.uid}`} key={post.uid}>\n            <a className={styles.link}>\n              <div className={commonStyles.posts}>\n                <h1>{post.data.title}</h1>\n                <p>{post.data.subtitle}</p>\n                <div className={commonStyles.infos}>\n                  <div>\n                    <FiCalendar size={20} />\n                    <p>{post.first_publication_date}</p>\n                  </div>\n                  <div>\n                    <FiUser size={20} />\n                    <p>{post.data.author}</p>\n                  </div>\n                </div>\n              </div>\n            </a>\n          </Link>\n        ))}\n        {nextPage && (\n          <button\n            type=\"button\"\n            className={styles.loadMore}\n            onClick={handleNextPage}\n          >\n            Carregar mais posts\n          </button>\n        )}\n      </main>\n    </>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type', 'posts')],\n    {\n      pageSize: 2,\n    }\n  );\n\n  const posts = postResponse.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: format(\n        new Date(post.first_publication_date),\n        'dd MMM yyyy',\n        {\n          locale: ptBR,\n        }\n      ),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author,\n      },\n    };\n  });\n\n  const postsPagination = {\n    next_page: postResponse.next_page,\n    results: posts,\n  };\n\n  return {\n    props: {\n      postsPagination,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}