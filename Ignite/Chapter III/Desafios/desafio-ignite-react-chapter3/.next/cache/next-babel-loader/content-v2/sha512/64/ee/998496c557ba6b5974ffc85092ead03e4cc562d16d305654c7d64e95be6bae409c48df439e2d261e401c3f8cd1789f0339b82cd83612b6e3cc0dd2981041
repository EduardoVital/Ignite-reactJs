{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/post/[slug].tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable react/no-danger */\nimport { RichText } from 'prismic-dom';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { FiCalendar, FiUser, FiClock } from 'react-icons/fi';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post;\n  var totalWords = post.data.content.reduce(function (total, contentItem) {\n    total += contentItem.heading.split(' ').length;\n    var words = contentItem.body.map(function (item) {\n      return item.text.split(' ').length;\n    });\n    words.map(function (word) {\n      return total += word;\n    });\n    return total;\n  }, 0);\n  var readTime = Math.ceil(totalWords / 200);\n  var router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  var formatedDate = format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n    locale: ptBR\n  });\n  var postEdited = format(new Date(post.last_publication_date), \"'* editado em' dd MMM yyyy', Ã s' H':'m\", {\n    locale: ptBR\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(post.data.title, \" | spacetraveling\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.data.banner.url,\n      alt: \"banner\",\n      className: styles.banner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: commonStyles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: commonStyles.posts,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: commonStyles.infos,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.data.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiClock, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\".concat(readTime, \" min\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), postEdited && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.postEdited,\n            children: postEdited\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: styles.content,\n          children: post.data.content.map(function (content) {\n            return /*#__PURE__*/_jsxDEV(\"article\", {\n              className: styles.headerContent,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: content.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  __html: RichText.asHtml(content.body)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, _this)]\n            }, content.heading, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/post/[slug].tsx"],"names":["RichText","format","ptBR","FiCalendar","FiUser","FiClock","useRouter","Head","commonStyles","styles","Post","post","totalWords","data","content","reduce","total","contentItem","heading","split","length","words","body","map","item","text","word","readTime","Math","ceil","router","isFallback","formatedDate","Date","first_publication_date","locale","postEdited","last_publication_date","title","banner","url","container","posts","infos","author","headerContent","__html","asHtml"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/no-danger */\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { RichText } from 'prismic-dom';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\nimport { FiCalendar, FiUser, FiClock } from 'react-icons/fi';\nimport Prismic from '@prismicio/client';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { getPrismicClient } from '../../services/prismic';\n\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\n\ninterface Post {\n  first_publication_date: string | null;\n  last_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({ post }: PostProps): JSX.Element {\n  const totalWords = post.data.content.reduce((total, contentItem) => {\n    total += contentItem.heading.split(' ').length;\n\n    const words = contentItem.body.map(item => item.text.split(' ').length);\n    words.map(word => (total += word));\n    return total;\n  }, 0);\n  const readTime = Math.ceil(totalWords / 200);\n\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return <h1>Carregando...</h1>;\n  }\n\n  const formatedDate = format(\n    new Date(post.first_publication_date),\n    'dd MMM yyyy',\n    {\n      locale: ptBR,\n    }\n  );\n\n  const postEdited = format(\n    new Date(post.last_publication_date),\n    \"'* editado em' dd MMM yyyy', Ã s' H':'m\",\n    {\n      locale: ptBR,\n    }\n  );\n\n  return (\n    <>\n      <Head>\n        <title>{`${post.data.title} | spacetraveling`}</title>\n      </Head>\n\n      <img src={post.data.banner.url} alt=\"banner\" className={styles.banner} />\n      <div className={styles.content}>\n        <div className={commonStyles.container}>\n          <header className={commonStyles.posts}>\n            <h1>{post.data.title}</h1>\n            <div className={commonStyles.infos}>\n              <div>\n                <FiCalendar size={20} />\n                <p>{formatedDate}</p>\n              </div>\n              <div>\n                <FiUser size={20} />\n                <p>{post.data.author}</p>\n              </div>\n              <div>\n                <FiClock size={20} />\n                <p>{`${readTime} min`}</p>\n              </div>\n            </div>\n            {postEdited && <p className={styles.postEdited}>{postEdited}</p>}\n          </header>\n\n          <main className={styles.content}>\n            {post.data.content.map(content => (\n              <article key={content.heading} className={styles.headerContent}>\n                <h2>{content.heading}</h2>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: RichText.asHtml(content.body),\n                  }}\n                />\n              </article>\n            ))}\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  const posts = await prismic.query([\n    Prismic.Predicates.at('document.type', 'posts'),\n  ]);\n\n  const paths = posts.results.map(post => {\n    return {\n      params: {\n        slug: post.uid,\n      },\n    };\n  });\n\n  return {\n    paths,\n    fallback: true,\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async ({\n  params,\n  preview = false,\n  previewData,\n}) => {\n  const prismic = getPrismicClient();\n  const { slug } = params;\n  const response = await prismic.getByUID('posts', String(slug), {\n    ref: previewData?.ref || null,\n  });\n\n  const post = {\n    uid: response.uid,\n    first_publication_date: response.first_publication_date,\n    last_publication_date: response.last_publication_date,\n    data: {\n      title: response.data.title,\n      subtitle: response.data.subtitle,\n      author: response.data.author,\n      banner: {\n        url: response.data.banner.url,\n      },\n      content: response.data.content.map(content => {\n        return {\n          heading: content.heading,\n          body: [...content.body],\n        };\n      }),\n    },\n  };\n\n  return {\n    props: {\n      post,\n      preview,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}