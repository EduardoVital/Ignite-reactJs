{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nexport default function Home({\n  results,\n  next_page\n}) {\n  const kkk = results.map(post => post);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.mainContent,\n    children: results.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.posts,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.data.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infos,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.first_publication_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FiUser, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.data.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, post.uid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query([Prismic.Predicates.at('document.type', 'posts')], {\n    fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n    pageSize: 100\n  });\n  const results = response.results.map(post => {\n    return {\n      slug: post.uid,\n      title: post.data.title,\n      subtitle: post.data.subtitle,\n      author: post.data.author,\n      updatedAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      })\n    };\n  });\n  return {\n    props: {\n      results\n    }\n  };\n};","map":{"version":3,"sources":["/home/eduardo/Desktop/WorkSpace Ubuntu/Web/Web Developer/RocketSeat/Desafios/desafio-ignite-react-chapter3/src/pages/index.tsx"],"names":["Prismic","FiCalendar","FiUser","getPrismicClient","styles","Home","results","next_page","kkk","map","post","mainContent","posts","data","title","subtitle","infos","first_publication_date","author","uid","getStaticProps","prismic","response","query","Predicates","at","fetch","pageSize","slug","updatedAt","Date","last_publication_date","toLocaleDateString","day","month","year","props"],"mappings":";;AACA,OAAOA,OAAP,MAAoB,mBAApB;AAEA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,gBAAnC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAqBA,eAAe,SAASC,IAAT,CAAc;AAC3BC,EAAAA,OAD2B;AAE3BC,EAAAA;AAF2B,CAAd,EAGiB;AAC9B,QAAMC,GAAG,GAAGF,OAAO,CAACG,GAAR,CAAYC,IAAI,IAAIA,IAApB,CAAZ;AACA,sBACE;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACO,WAAxB;AAAA,cACGL,OAAO,CAACG,GAAR,CAAYC,IAAI,iBACf;AAAoB,MAAA,SAAS,EAAEN,MAAM,CAACQ,KAAtC;AAAA,8BACE;AAAA,kBAAKF,IAAI,CAACG,IAAL,CAAUC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIJ,IAAI,CAACG,IAAL,CAAUE;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACY,KAAvB;AAAA,gCACE;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIN,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIP,IAAI,CAACG,IAAL,CAAUK;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUR,IAAI,CAACS,GAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAMC,OAAO,GAAGlB,gBAAgB,EAAhC;AACA,QAAMmB,QAAQ,GAAG,MAAMD,OAAO,CAACE,KAAR,CACrB,CAACvB,OAAO,CAACwB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,OAAvC,CAAD,CADqB,EAErB;AACEC,IAAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,cAAlC,CADT;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAFqB,CAAvB;AAQA,QAAMrB,OAAO,GAAGgB,QAAQ,CAAChB,OAAT,CAAiBG,GAAjB,CAAqBC,IAAI,IAAI;AAC3C,WAAO;AACLkB,MAAAA,IAAI,EAAElB,IAAI,CAACS,GADN;AAELL,MAAAA,KAAK,EAAEJ,IAAI,CAACG,IAAL,CAAUC,KAFZ;AAGLC,MAAAA,QAAQ,EAAEL,IAAI,CAACG,IAAL,CAAUE,QAHf;AAILG,MAAAA,MAAM,EAAER,IAAI,CAACG,IAAL,CAAUK,MAJb;AAKLW,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASpB,IAAI,CAACqB,qBAAd,EAAqCC,kBAArC,CACT,OADS,EAET;AACEC,QAAAA,GAAG,EAAE,SADP;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,IAAI,EAAE;AAHR,OAFS;AALN,KAAP;AAcD,GAfe,CAAhB;AAiBA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL9B,MAAAA;AADK;AADF,GAAP;AAKD,CAhCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport Prismic from '@prismicio/client';\n\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport { getPrismicClient } from '../services/prismic';\n\nimport styles from './home.module.scss';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({\n  results,\n  next_page,\n}: PostPagination): JSX.Element {\n  const kkk = results.map(post => post);\n  return (\n    <main className={styles.mainContent}>\n      {results.map(post => (\n        <div key={post.uid} className={styles.posts}>\n          <h1>{post.data.title}</h1>\n          <p>{post.data.subtitle}</p>\n          <div className={styles.infos}>\n            <div>\n              <FiCalendar size={20} />\n              <p>{post.first_publication_date}</p>\n            </div>\n            <div>\n              <FiUser size={20} />\n              <p>{post.data.author}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </main>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query(\n    [Prismic.Predicates.at('document.type', 'posts')],\n    {\n      fetch: ['posts.title', 'posts.subtitle', 'posts.author'],\n      pageSize: 100,\n    }\n  );\n\n  const results = response.results.map(post => {\n    return {\n      slug: post.uid,\n      title: post.data.title,\n      subtitle: post.data.subtitle,\n      author: post.data.author,\n      updatedAt: new Date(post.last_publication_date).toLocaleDateString(\n        'pt-BR',\n        {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric',\n        }\n      ),\n    };\n  });\n\n  return {\n    props: {\n      results,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}